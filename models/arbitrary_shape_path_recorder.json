{"(8, 8, 2),(8, 8, 8),(8, 8, 8)|(8, 8, 8),(8, 8, 8, 8),(8, 8, 8, 8)|(8, 8, 8),(8, 8, 8, 8),(8, 8, 8, 8)": {"flops": 144850944, "size": 524288, "ssa_path": [[0, 3], [6, 7], [2, 5], [1, 9], [4, 12], [10, 13], [11, 14], [8, 15]], "path": [[0, 3], [4, 5], [1, 3], [0, 3], [0, 4], [1, 3], [1, 2], [0, 1]], "outlist": [2, 6, 12, 13, 15, 17, 18], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 4], [7, 8, 0], [9, 10, 3, 8], [11, 12, 5, 10], [13, 14, 7], [15, 16, 9, 14], [17, 18, 11, 16]]}, "(5, 5, 5),(5, 5, 5, 5)": {"path": [[0, 1]], "outlist": [0, 2, 3, 4, 5], "sublist_list": [[0, 1, 2], [3, 4, 5, 1]]}, "(5, 5, 2),(5, 5, 5),(5, 5, 5)|(5, 5, 5),(5, 5, 5, 5),(5, 5, 5, 5)|(5, 5, 5),(5, 5, 5, 5),(5, 5, 5, 5)": {"path": [[0, 1], [1, 7], [1, 6], [0, 1], [0, 1], [1, 2], [1, 2], [0, 1]], "outlist": [2, 6, 12, 13, 15, 17, 18], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 4], [7, 8, 0], [9, 10, 3, 8], [11, 12, 5, 10], [13, 14, 7], [15, 16, 9, 14], [17, 18, 11, 16]]}, "lpabcd,klp->lkabcd?(4, 16, 5, 5, 5, 5),(3000, 4, 16)": [[0, 1]], " lpabc,klp->lkabc?(8, 16, 5, 5, 5),(3000, 8, 16)": [[0, 1]], " lopab,klp->lkoab?(4, 2, 16, 5, 5),(3000, 4, 16)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 2, 25, 25),(3000, 2, 25, 25),(3000, 2, 25, 25),(3000, 2, 25, 25)": [[0, 1], [0, 1], [0, 1]], "(5, 5, 2),(5, 5, 5)|(5, 5, 5),(5, 5, 5, 5)": {"path": [[0, 1], [0, 2], [0, 1]], "outlist": [2, 4, 5, 7, 8], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 0], [7, 8, 3, 6]]}, "(2, 2, 2),(2, 2, 2),(2, 2, 2),(2, 2, 2)|(2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2)|(2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2)|(2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2),(2, 2, 2, 2)": {"path": [[4, 8], [2, 3], [0, 1], [6, 7], [0, 3], [0, 7], [5, 8], [0, 7], [2, 3], [2, 4], [0, 1], [1, 3], [2, 3], [0, 2], [0, 1]], "outlist": [2, 8, 16, 24, 25, 27, 29, 31, 32], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 4], [7, 8, 6], [9, 10, 0], [11, 12, 3, 10], [13, 14, 5, 12], [15, 16, 7, 14], [17, 18, 9], [19, 20, 11, 18], [21, 22, 13, 20], [23, 24, 15, 22], [25, 26, 17], [27, 28, 19, 26], [29, 30, 21, 28], [31, 32, 23, 30]]}, "lpabcd,klp->lkabcd?(36, 4, 2, 2, 2, 2),(3000, 36, 4)": [[0, 1]], " lpabc,klp->lkabc?(24, 4, 2, 2, 2),(3000, 24, 4)": [[0, 1]], " lopab,klp->lkoab?(4, 2, 4, 2, 2),(3000, 4, 4)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 2, 16, 16),(3000, 2, 16, 16),(3000, 2, 16, 16),(3000, 2, 16, 16)": [[0, 1], [0, 1], [0, 1]], "(3, 3, 4),(3, 3, 3),(3, 3, 3)|(3, 3, 3),(3, 3, 3, 3),(3, 3, 3, 3)|(3, 3, 3),(3, 3, 3, 3),(3, 3, 3, 3)": {"path": [[0, 1], [1, 4], [0, 2], [1, 4], [0, 4], [1, 3], [1, 2], [0, 1]], "outlist": [2, 6, 12, 13, 15, 17, 18], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 4], [7, 8, 0], [9, 10, 3, 8], [11, 12, 5, 10], [13, 14, 7], [15, 16, 9, 14], [17, 18, 11, 16]]}, " lopab,klp->lkoab?(4, 4, 128, 3, 3),(3, 4, 128)": [[0, 1]], " lpabc,klp->lkabc?(16, 128, 3, 3, 3),(3, 16, 128)": [[0, 1]], "lpabcd,klp->lkabcd?(16, 128, 3, 3, 3, 3),(3, 16, 128)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3, 4, 27, 27),(3, 4, 27, 27),(3, 4, 27, 27),(3, 4, 27, 27)": [[0, 1], [0, 1], [0, 1]], " lopab,klp->lkoab?(4, 4, 128, 3, 3),(3000, 4, 128)": [[0, 1]], " lpabc,klp->lkabc?(16, 128, 3, 3, 3),(3000, 16, 128)": [[0, 1]], "lpabcd,klp->lkabcd?(16, 128, 3, 3, 3, 3),(3000, 16, 128)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 4, 27, 27),(3000, 4, 27, 27),(3000, 4, 27, 27),(3000, 4, 27, 27)": [[0, 1], [0, 1], [0, 1]], " lopab,klp->lkoab?(4, 4, 128, 2, 2),(3000, 4, 128)": [[0, 1]], " lpabc,klp->lkabc?(16, 128, 2, 2, 2),(3000, 16, 128)": [[0, 1]], "lpabcd,klp->lkabcd?(16, 128, 2, 2, 2, 2),(3000, 16, 128)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 4, 8, 8),(3000, 4, 8, 8),(3000, 4, 8, 8),(3000, 4, 8, 8)": [[0, 1], [0, 1], [0, 1]], "(2, 2, 4),(2, 2, 2)|(2, 2, 2),(2, 2, 2, 2)": {"path": [[0, 2], [0, 1], [0, 1]], "outlist": [2, 4, 5, 7, 8], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 0], [7, 8, 3, 6]]}, " lopab,klp->lkoab?(4, 2, 16, 2, 2),(3000, 4, 16)": [[0, 1]], " lpabc,klp->lkabc?(8, 16, 2, 2, 2),(3000, 8, 16)": [[0, 1]], "lpabcd,klp->lkabcd?(4, 16, 2, 2, 2, 2),(3000, 4, 16)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 2, 4, 4),(3000, 2, 4, 4),(3000, 2, 4, 4),(3000, 2, 4, 4)": [[0, 1], [0, 1], [0, 1]], " lopab,klp->lkoab?(4, 2, 16, 2, 2),(3, 4, 16)": [[0, 1]], "(2, 2, 2),(2, 2, 2)|(2, 2, 2),(2, 2, 2, 2)": {"path": [[0, 1], [0, 2], [0, 1]], "outlist": [2, 4, 5, 7, 8], "sublist_list": [[0, 1, 2], [3, 4, 1], [5, 6, 0], [7, 8, 3, 6]]}, " lopab,klp->lkoab?(4, 2, 128, 2, 2),(3000, 4, 128)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(3000, 2, 8, 8),(3000, 2, 8, 8),(3000, 2, 8, 8),(3000, 2, 8, 8)": [[0, 1], [0, 1], [0, 1]], " lopab,klp->lkoab?(4, 2, 16, 2, 2),(2, 4, 16)": [[0, 1]], " lpabc,klp->lkabc?(8, 16, 2, 2, 2),(2, 8, 16)": [[0, 1]], "lpabcd,klp->lkabcd?(4, 16, 2, 2, 2, 2),(2, 4, 16)": [[0, 1]], "kvab,kxbc,kycd,kzda->kvxyz?(2, 2, 4, 4),(2, 2, 4, 4),(2, 2, 4, 4),(2, 2, 4, 4)": [[0, 1], [0, 1], [0, 1]], "(3,3,3),[1,0,49],(3,3,3,3),[1,3,2,50],(3,3,3,3),[3,5,51,4],(3,3,3,3),[5,7,6,52],(3,3,3),[7,8,53],(3,5,6),[0,9,13],(3,5,5,7),[2,9,10,14],(3,5,5,7),[4,10,11,15],(3,5,5,7),[6,11,12,16],(3,5,6),[8,12,17],(6,7,7),[13,18,22],(7,7,8,8),[14,18,19,23],(7,8,8,10),[15,19,20,24],(7,8,7,8),[16,20,21,25],(6,7,7),[17,21,26],(7,7,8),[22,27,28],(8,8,8,10),[23,29,28,30],(1,10,10,10,10),[54,24,31,30,32],(8,8,10,8),[25,33,32,34],(7,7,8),[35,26,34],(6,7,7),[40,36,27],(7,7,8,8),[41,36,37,29],(7,8,8,10),[42,37,38,31],(7,8,7,8),[43,38,39,33],(6,7,7),[44,39,35],(3,5,6),[49,45,40],(3,5,5,7),[50,45,46,41],(3,5,5,7),[51,46,47,42],(3,5,5,7),[52,47,48,43],(3,5,6),[53,48,44],[54]": {"flops": 803276886, "size": 1440000, "ssa_path": [[0, 1], [4, 29], [24, 31], [8, 9], [25, 26], [5, 30], [15, 20], [2, 27], [14, 19], [3, 32], [10, 35], [23, 28], [7, 12], [39, 41], [21, 36], [16, 44], [6, 11], [18, 38], [13, 47], [34, 45], [40, 46], [33, 48], [43, 51], [49, 50], [37, 53], [22, 54], [17, 55], [52, 56], [42, 57]], "path": [[0, 1], [2, 27], [21, 27], [5, 6], [19, 20], [2, 21], [9, 14], [0, 16], [7, 11], [0, 14], [2, 15], [10, 11], [1, 3], [13, 15], [6, 10], [3, 14], [0, 1], [2, 7], [0, 11], [3, 8], [4, 7], [2, 6], [4, 7], [4, 5], [2, 5], [1, 4], [0, 3], [1, 2], [0, 1]]}}